# This workflow will build a Golang project and run tests after starting the Temporal server
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Log in to Docker Hub
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u "${{ github.actor }}" --password-stdin

    - name: Start Temporal Server
      run: |
        docker run --name temporal -d temporalio/temporal-server:latest  # Start Temporal Server in a Docker container
        # Optional: Wait for the Temporal server to be fully ready
        sleep 30  # Adjust this duration as needed

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Stop Temporal Server
      run: docker stop temporal && docker rm temporal  # Stop and remove the Temporal container
